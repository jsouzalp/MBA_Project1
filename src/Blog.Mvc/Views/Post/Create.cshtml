@using Blog.Bases;
@model PostViewModel

@{
    ViewData["Title"] = "Nova Postagem";
}

<div class="container mt-4">
    <h2 class="text-center">Nova Postagem</h2>

    <form asp-action="Create" method="post">
        <div class="form-group">
            <label asp-for="Title" class="control-label"></label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Message" class="control-label"></label>
            <textarea asp-for="Message" class="form-control" rows="5"></textarea>
            <span asp-validation-for="Message" class="text-danger"></span>
        </div>

        <div>
            @if (ViewData["ErrorMessages"] is List<ErrorBase> errors && errors.Any())
            {
                if (errors != null && errors.Any())
                {
                    <div class="alert alert-danger">
                        @foreach (var error in errors)
                        {
                            <p>@error.Message</p>
                        }
                    </div>
                }
            }
        </div>

        <div class="form-group text-end mt-4">
            <button type="submit" class="btn btn-success"> 
                <i class="fa fa-floppy-o" aria-hidden="true"></i> Publicar
            </button>

            <a asp-action="Index" class="btn btn-secondary"><i class="fa fa-ban" aria-hidden="true"></i> Cancelar</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
