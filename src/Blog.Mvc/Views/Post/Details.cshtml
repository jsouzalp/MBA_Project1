@using System.Security.Claims;
@model PostViewModel

@{
    ViewData["Title"] = "Detalhes da Postagem";
}

<div class="container mt-4">
    <h2 class="text-center">Postagem e Comentários</h2>

    <!-- Área para exibir erros -->
    <div id="error-messages">
        @await Html.PartialAsync("_ErrorMessages", ViewBag.ErrorMessages as IEnumerable<string> ?? new List<string>())
    </div>

    @if (User.Identity.IsAuthenticated)
    {
        <!-- Formulário para adicionar um novo comentário -->
        <form asp-action="Create" asp-controller="Comment" method="post" class="mt-3">
            <div class="form-group">
                <h6>Adicionar Novo Comentário</h6>
                @*<label for="newCommentMessage">Comentário</label>*@
                <textarea id="newCommentMessage" name="Message" class="form-control" rows="4" required></textarea>
            </div>

            <!-- Campo oculto para passar o PostId -->
            <input type="hidden" name="PostId" value="@Model.Id" />
            <div class="text-end mt-2">
                <button type="submit" class="btn btn-primary"><i class="fa fa-floppy-o" aria-hidden="true"></i> Enviar Comentário</button>
            </div>
        </form>

        <div class="card mt-4">
            <div class="card-body">
                <h2 class="card-title">@Model.Title</h2>
                <h6 class="card-title">Feito em @Model.Date.ToString("dd/MM/yyyy HH:mm")</h6>
                <p class="card-text">@Model.Message</p>
            </div>
        </div>

        <h6 class="mt-4">Comentários</h6>

        @if (Model.Comments != null && Model.Comments.Any())
        {
            @foreach (var comment in Model.Comments)
            {
                <div class="card mb-3">
                    <div class="card-body">
                        <h6 class="card-title">Autor: <cite title="Source Title">@comment.CommentAuthorName</cite></h6>
                        <h6 class="card-title">Data: <cite title="Date Title">@comment.Date.ToString("dd/MM/yyyy HH:mm")</cite></h6>
                        <p>@comment.Message</p>
                        <div class="d-flex justify-content-end mt-2">
                            @if (comment.CommentAuthorId == Guid.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier)))
                            {
                                <a asp-action="Delete" asp-controller="Comment" asp-route-id="@comment.Id" class="btn btn-danger btn-sm" onclick="return confirm('Tem certeza que deseja excluir este comentário?');"><i class="fa fa-trash" aria-hidden="true"></i> Excluir</a>
                            }
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-muted">Nenhum comentário para esta postagem.</p>
        }
    }
    else
    {
        <div class="alert alert-warning" role="alert">
            Você precisa estar <a asp-area="Identity" asp-page="/Account/Login">logado</a> para criar um comentário.
        </div>
    }
</div>
